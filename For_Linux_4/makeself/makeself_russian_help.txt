

аргументы являются дополнительными опциями для Makeself. Доступные из них являются :

--версия: Выводит номер версии на стандартный вывод, затем немедленно завершает работу

--gzip: Используйте gzip для сжатия (по умолчанию на платформах, на которых обычно доступен gzip, таких как Linux)

--bzip2: Используйте bzip2 вместо gzip для лучшего сжатия. Команда bzip2 должна быть доступна в пути к команде. Рекомендуется, чтобы префикс архива был установлен на что-то вроде ".bz2.run", чтобы потенциальные пользователи знали, что для его извлечения им понадобится bzip2.

--pbzip2: Используйте pbzip2 вместо gzip для лучшего и более быстрого сжатия на машинах с несколькими процессорами. Команда pbzip2 должна быть доступна в пути к команде. Рекомендуется, чтобы префикс архива был установлен на что-то вроде ".bz2.run", чтобы потенциальные пользователи знали, что для его извлечения им понадобится bzip2.

--xz: Используйте xz вместо gzip для лучшего сжатия. Команда xz должна быть доступна в пути к команде. Рекомендуется, чтобы префикс архива был установлен на что-то вроде ".xz.run" для архива, чтобы потенциальные пользователи знали, что им понадобится xz для его извлечения.

--lzo: Используйте lzop вместо gzip для лучшего сжатия. Команда lzop должна быть доступна в пути к команде. Рекомендуется, чтобы префикс архива был установлен на что-то вроде .lzo.run для архива, чтобы потенциальные пользователи знали, что для его извлечения им понадобится lzop.

--lz4: Используйте lz4 вместо gzip для лучшего сжатия. Команда lz4 должна быть доступна в пути к команде. Рекомендуется, чтобы префикс архива был установлен на что-то вроде ".lz4.run" для архива, чтобы потенциальные пользователи знали, что для его извлечения им понадобится lz4.

--zstd: Используйте zstd вместо gzip для лучшего сжатия. Команда zstd должна быть доступна в пути к команде. Рекомендуется, чтобы префикс архива был установлен на что-то вроде ".zstd.run" для архива, чтобы потенциальные пользователи знали, что для его извлечения им понадобится zstd.

--pigz: Используйте pigz для сжатия.

--base64: Закодируйте архив в ASCII в формате Base64 вместо сжатия (требуется команда base64).

--gpg-шифрование: Зашифруйте архив с помощью gpg -ac -z $COMPRESS_LEVEL. Это вызовет запрос пароля для шифрования. Предполагается, что у потенциальных пользователей установлена gpg.

--ssl-шифрование: Зашифруйте архив с помощью openssl aes-256-cbc -a -salt. Это вызовет запрос пароля для шифрования. Предполагается, что у потенциальных пользователей установлены инструменты OpenSSL.

--сжатие: Используйте команду UNIX compress для сжатия данных. Это должно быть по умолчанию на всех платформах, на которых отсутствует gzip.

--nocomp: Не используйте сжатие для архива, который затем будет представлять собой несжатый TAR.

--уровень сложности: Укажите уровень сжатия для gzip, bzip2, pbzip2, zstd, xz, lzo или lz4. (по умолчанию 9)

--потоки: Укажите количество потоков, которые будут использоваться компрессорами, поддерживающими распараллеливание. Не используйте компрессор по умолчанию. Наиболее полезно (и необходимо) для выбора потоков xz, обычно с --threads = 0 для всех доступных ядер. pbzip2 и pigz по умолчанию параллельны, и установка этого значения позволяет ограничить количество используемых ими потоков.

--примечание: Созданный архив будет извлекать файлы не во временный каталог, а в новый каталог, созданный в текущем каталоге. Это лучше для распространения пакетов программного обеспечения, которые могут извлекаться и компилироваться самостоятельно (т.е. запускать компиляцию с помощью встроенного скрипта).

--текущий: Файлы будут извлечены в текущий каталог, а не в подкаталог. Этот вариант подразумевает --примечание выше.

--следуйте: Следуйте символическим ссылкам внутри каталога архива, т.е. храните файлы, на которые указывают, вместо самих ссылок.

--добавление (новое в 2.1.x): Добавление данных в существующий архив вместо создания нового. В этом режиме настройки из исходного архива используются повторно (тип сжатия, метка, встроенный скрипт), и поэтому их не нужно повторно указывать в командной строке.

--заголовок: Makeself использует отдельный файл для хранения заглушки заголовка, называемый makeself-header.sh . По умолчанию предполагается, что он хранится в том же месте, что и makeself.sh . Этот параметр можно использовать для указания его фактического местоположения, если он хранится в другом месте.

--очистка: Укажите сценарий, который запускается при прерывании или успешном завершении выполнения. Сценарий выполняется в той же среде и с теми же начальными параметрами скрипта, что и startup_script.

--копировать: После извлечения архив сначала извлекается во временный каталог. Основное применение этого состоит в том, чтобы разрешить автономным установщикам храниться в самодельном архиве на компакт-диске, когда программе установки позже потребуется размонтировать компакт-диск и разрешить вставку нового. Это предотвращает ошибки "занято файловой системой" для установщиков, которые охватывают несколько компакт-дисков.

--nox11 : Отключите автоматическое создание нового терминала в X11.

--nowait: При выполнении с нового терминала X11 отключите приглашение пользователя в конце выполнения скрипта.

--nomd5 и --nocrc: Отключите создание контрольной суммы MD5 / CRC для архива. Это ускоряет процесс извлечения, если проверка целостности не требуется.

--sha256: Добавляет контрольную сумму SHA256 для архива. Это в дополнение к контрольным суммам MD5 / CRC, если только не используется также --nomd5.

--файл lsm: Предоставьте и создайте файл LSM, который будет встроен в созданный архив. Файлы LSM описывают программный пакет таким образом, чтобы его можно было легко анализировать. Запись LSM затем может быть позже извлечена из архива с помощью аргумента --lsm. Пример файла LSM предоставляется с помощью Makeself.

--выбор формата tar: Укажите формат архива tar (по умолчанию - ustar); вы можете использовать любое значение, принятое вашей командой tar (например, posix, v7 и т. Д.).

--tar-дополнительная опция: Добавьте дополнительные параметры в командную строку tar.

Например, чтобы исключить каталог .git из каталога упакованного архива с помощью GNU tar, можно использовать makeself.sh --tar-дополнительно "--исключить=.git" ...

--сохранить-umask: Сохраняйте значение umask по умолчанию для оболочки, а не переопределять при выполнении самораспаковывающегося архива.

--дата упаковки: Используйте предоставленную строку в качестве даты упаковки вместо текущей даты.

--лицензия: Добавьте файл лицензии.

--nooverwrite: Не извлекайте архив, если указанный целевой каталог уже существует.

--файл заголовка справки: Добавьте заголовок в вывод архива --help.

archive_dir - это имя каталога, содержащего файлы, подлежащие архивированию

имя_файла - это имя создаваемого архива

метка - это произвольная текстовая строка, описывающая пакет. Он будет отображаться при извлечении файлов.

startup_script - это команда, которая выполняется из каталога извлеченных файлов. Таким образом, если вы хотите выполнить программу, содержащуюся в этом каталоге, вы должны добавить в свою команду префикс ./. Например, ./программа будет в порядке. script_args являются дополнительными аргументами для этой команды.

